<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Usuario extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Usuario_model');
    }

    /*
     * Listing of usuarios
     */
    function index()
    {
        $data['usuarios'] = $this->Usuario_model->get_all_usuarios();

    //    $data['_view'] = 'usuario/index';
      //  $this->load->view('layouts/main',$data);

      $this->load->view('include/header');
      $this->load->view('usuario/index',$data);
      $this->load->view('include/footer');
    }

    /*
     * Adding a new usuario
     */
    function add()
    {


        $this->load->library('form_validation');

		$this->form_validation->set_rules('login','Login','required');
		$this->form_validation->set_rules('senha','Senha','required');
    $this->form_validation->set_rules('senhaconf', 'Confirmar senha', 'required|matches[senha]');
    $this->form_validation->set_rules('permissao','Permissão','required');
		if($this->form_validation->run())
        {
            $params = array(
				'status' => $this->input->post('status'),
				'senha' => $this->input->post('senha'),
				'login' => $this->input->post('login'),
				'datacadastro' => $this->input->post('datacadastro'),
        'idPermissao' => $this->input->post('permissao'),
            );

            $usuario_id = $this->Usuario_model->add_usuario($params);
            redirect('usuario/index');
        }
        else
        {
        //    $data['_view'] = 'usuario/add';
        //    $this->load->view('layouts/main',$data);

        $this->load->model('Permissoes_model');

         $data['permissao'] = $this->Permissoes_model->get_all_permissoes();

        $this->load->view('include/header');
        $this->load->view('usuario/add',$data);
        $this->load->view('include/footer');
        }
    }

    /*
     * Editing a usuario
     */
    function edit($idusuario)
    {
        // check if the usuario exists before trying to edit it
        $data['usuario'] = $this->Usuario_model->get_usuario($idusuario);

        if(isset($data['usuario']['idusuario']))
        {
          $this->load->library('form_validation');

      $this->form_validation->set_rules('login','Login','required');
      $this->form_validation->set_rules('senha','Senha','required');
      $this->form_validation->set_rules('senhaconf', 'Confirmar senha', 'required|matches[senha]');
      $this->form_validation->set_rules('permissao','Permissão','required');

			if($this->form_validation->run())
            {
                $params = array(
					'status' => $this->input->post('status'),
					'senha' => $this->input->post('senha'),
					'login' => $this->input->post('login'),
					'datacadastro' => $this->input->post('datacadastro'),
                );

                $this->Usuario_model->update_usuario($idusuario,$params);
                redirect('usuario/index');
            }
            else
            {
            //    $data['_view'] = 'usuario/edit';
            //    $this->load->view('layouts/main',$data);

            $this->load->model('Permissoes_model');

              $data['permissao'] = $this->Permissoes_model->get_all_permissoes();

            $this->load->view('include/header');
            $this->load->view('usuario/edit',$data);
            $this->load->view('include/footer');
            }
        }
        else
            show_error('The usuario you are trying to edit does not exist.');
    }

    /*
     * Deleting usuario
     */
    function remove($idusuario)
    {
        $usuario = $this->Usuario_model->get_usuario($idusuario);

        // check if the usuario exists before trying to delete it
        if(isset($usuario['idusuario']))
        {
            $this->Usuario_model->delete_usuario($idusuario);
            redirect('usuario/index');
        }
        else
            show_error('The usuario you are trying to delete does not exist.');
    }

}
